<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_ff3_2jq_44">
 <title>Setting up logging</title>
 <shortdesc>Go SDK currently doesn't support highly detailed logging.</shortdesc>
 <conbody>
  <p>The Go SDK does not currently support highly detailed logging, but does currently allow the
   specification of a logging endpoint which will log various details from within the SDK to aid in
   the diagnosis of issues which may occur.  To utilize this functionality, you should execute code
   similar to the following at the beginning of your application prior to any use of the
    <codeph>gocb</codeph> or <codeph>gocbcore</codeph> library methods.  Note that in this example
   we use a built-in logger which will log all messages to standard output, but you may use any
   structure which matches the <codeph>gocbcore.Logger</codeph> interface.</p>
  <p>
   <codeblock outputclass="language-go">import (
   "github.com/couchbaselabs/gocb/gocbcore"
)

func main() {
   gocbcore.SetLogger(gocbcore.DefaultStdOutLogger())

   // Use the gocb library.
}</codeblock>
  </p>
 </conbody>
</concept>
