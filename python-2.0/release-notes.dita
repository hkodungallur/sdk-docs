<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_cn2_5ck_r4">
	<title>Release notes</title>
	<shortdesc>Release notes for the 2.0 version of the Python SDK.</shortdesc>
	<conbody>
		
		<section><title>Version 2.0.2</title>   
			<p>Version 2.0.2 (2 June 2015) fixes some bugs in the N1QL API, and also adds an administration
				API</p>
          
            <ul id="ul_msg_whv_fs">
                <li>Fix encoding bug for named parameters with N1QL queries. This fixes an issue
                    where named parameters passed to the <apiname>N1QLQuery</apiname> constructor
                    would be accepted by the library, but would not actually be properly supplied
                    during query time.</li>
                <li>Add administrative API for creating/modifying/removing buckets. This extends the
                        <codeph>couchbase.admin.Admin</codeph> class. This API is only available for
                    synchronous clients (and thus has no gevent or Twisted wrappers).</li>
            </ul>
		</section>  
    
    <section>
        <title>Version 2.0.1 (5 May 2015)</title>
        
            <p>Version 2.0.1 offers a new (experimental) N1QL API.</p>
            <p><b>Changes</b><ul id="ul_s5g_th1_yr">
                    <li>The N1QL API now returns raw Python dictionaries (as parsed from within
                        Python) rather than <apiname>N1QLRow</apiname> objects. The
                            <apiname>N1QLRow</apiname> class has been removed.</li>
                    <li>N1QL API encoding is done directly in pure Python, rather than deferring to
                        the C library.</li>
                    <li>The <apiname>N1QLQuery.set_args()</apiname> and
                            <apiname>N1QLQuery.add_args</apiname> have been removed. Placeholder
                        parameters should be provided directly in the constructor in the form of
                        Python's positional and keyword arguments,
                        e.g.<codeblock outputclass="language-python">q = N1QLQuery("SELECT name, age FROM users WHERE age=$age", age=42)</codeblock></li>
                    <li>A new <codeph>N1QLQuery.consistency</codeph> property has been implemented,
                        which may accept a <varname>couchbase.n1ql.CONSISTENCY_REQUEST</varname> or
                            <varname>CONSISTENCY_NONE</varname> to indicate the consistency of the
                        dataset against which the query is executed</li>
                </ul><b>Enhancements</b><ul id="ul_lrf_g31_yr">
                    <li>Document the <apiname>Bucket.flush()</apiname> method.</li>
                    <li>Starting from this version, Windows binaries are now available for Python
                        3.4</li>
                </ul></p>
    </section>
		
		<section>
   
        <title>Version 2.0.0 (7 April 2015)</title>
    
            <p>Version 2.0.0 is the first general availability release of the 2.0 Python SDK.</p>
        <p>Enhancements</p>
                <ul id="ul_tg1_mzf_qr">
                    <li>The client now offers integration with Python's <codeph>logging</codeph>
                        module. Simply invoke <codeph>couchbase.enable_logging()</codeph> to use
                        Python's built-in logging. This is a cleaner alternative to using
                            <codeph>LCB_LOGLEVEL</codeph> in the environment.</li>
                    <li>Building on Apple's Python now works in all conditions, as
                            <codeph>/usr/local/</codeph> is now included in the library search
                        paths.</li>
                    <li>A new <codeph>split_result()</codeph> method has been added to the
                            <codeph>CouchbaseError</codeph> base exception class. This method allows
                        users to more easily derive the successful and failed operations (the later
                        of which caused the exception).</li>
                    <li>For <i>Windows</i> installers, libcouchbase <b>2.4.8</b> is bundled.</li>
                </ul>

		</section>
		
		<section>
		
	
		<title>Version 2.0.0 Beta 2 (3 March 2015)</title>
		
			<p>Version 2.0 Beta 2 is the second beta release of the Python SDK version 2.0. This release
				includes additional experimental support for geospatial views and N1QL queries.</p>
			
			<p>Enhancements</p>

				<ul id="ul_erf_djz_gr">
					<li>The views subsystem has been rewritten internally to take advantage of the new view API
						inside libcouchbase. As a result, the client now depends on libcouchbase version
						2.4.7 or later.</li>
					<li>Geospatial support has been added via the <codeph>SpatialQuery</codeph> class.
						This can be used like the <codeph>Query</codeph> class, but contains the
							<codeph>start_range</codeph> and <codeph>end_range</codeph> properties.</li>
					<li>N1QL support has been added via the <codeph>N1QLQuery</codeph> class and the
							<codeph>Bucket.n1ql_query()</codeph> method. This exposes an iterator-based API
						similar to the view API. The N1QL API is highly experimental and likely to
						change.</li>
				</ul>

			</section>
		
		<section>

	
		<title>Version 2.0.0 Beta 1 (20 January 2015)</title>
		
			<p>Version 2.0 Beta 1 is the first beta release of the Python SDK version 2.0. This release
				includes new documentation, new API reference, and a tested interface that represents
				all committed features. Various uncommitted and experimental features might change prior
				to the final release of version 2.0.0.</p>

			<p>Enhancements and behavioral changes</p>

				<ul>
					<li>New CRUD verbs have been introduced, which makes this release more compatible with other
						2.0 SDKs. Thus, <codeph>set</codeph> has been renamed to <codeph>upsert</codeph>,
							<codeph>add</codeph> to <codeph>insert</codeph>, and <codeph>incr</codeph> and
							<codeph>decr</codeph> to <codeph>counter</codeph>.</li>
					<li>A new <codeph>Bucket</codeph> class has been introduced that replaces the older
							<codeph>Connection</codeph> class. To connect to a bucket, instantiate the
							<codeph>Bucket</codeph> object via its constructor. The constructor is
						typically passed a <term>connection string</term> (see API documentation for
						details). The older method for connecting, that is,
							<codeph>Couchbase.connect</codeph> has been deprecated (but not removed).</li>
					<li>Data flags have been modified to conform to the new SDK 2.0 specification
						regarding common handling of data types across clients. This means that data
						stored by the Python SDK (other than in <codeph>FMT_PICKLE</codeph>) will be
						readable by all other SDKs. This does not break interoperability with older
						versions of the Python client, but might break interoperability with older
						versions of other SDKs.</li>
					<li>Flushing a bucket is now possible via the <codeph>Bucket.flush</codeph>
						method.</li>
					<li><codeph>include_docs</codeph> now works in gevent. Previously this would use the
						server-side <codeph>include_docs</codeph>, which was removed in Couchbase Server
						3.0.</li>
					<li>An experimental implementation, <codeph>acouchbase</codeph>, has been added. This is
						intended to integrate with the Python 3 <codeph>asyncio</codeph> (also know as
						Tulip) event system.</li>
				</ul>

			
		<p>Known issues</p>

				<ul>
					<li>The N1QL interface has yet to be defined.</li>
				</ul>

			</section>
		</conbody>



</concept>
